//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//
// <description>
//     Provides definition of backend controllers and actions.
//     Actions body should be overriden by the implementing http service.
// </description>
//------------------------------------------------------------------------------

import {MovieResult} from '../models/api-models/movie-result';
import {PersonResult} from '../models/api-models/person-result';
import {AwardResult} from '../models/api-models/award-result';
import {NewControllerDefinitions} from '../controllers/new-controller';
import {Observable} from "rxjs";
import {method, fromBody, fromUri} from "./library/miscellaneous";


export class MovieApiController {

    @method('GET')
    GetMovies(): Observable<MovieResult[]> {
        return [] as any;
    }

    @method('GET')
    GetActors(): Observable<PersonResult[]> {
        return [] as any;
    }

    @method('GET')
    GetDirectors(): Observable<PersonResult[]> {
        return [] as any;
    }

    @method('GET')
    GetAwards(): Observable<AwardResult[]> {
        return [] as any;
    }

    @method('GET')
    GetMoviesFromAYear(year: number, _: string): Observable<MovieResult[]> {
        return ['year', '_'] as any;
    }

}

export class NewController {

    @method('GET')
    Test(): Observable<string> {
        return [] as any;
    }

    @method('GET')
    TestTwo(): Observable<string> {
        return [] as any;
    }

    @method('GET')
    TestThree(): Observable<string> {
        return [] as any;
    }

    @method('GET')
    TestFour(): Observable<string> {
        return [] as any;
    }

    @method('GET')
    TestNine(): Observable<NewControllerDefinitions.Jack> {
        return [] as any;
    }

}

export class TranslateDemoController {

    @method('GET', true)
    Get(source: string): Observable<any> {
        return ['source'] as any;
    }

    @method('POST', true)
    Post(@fromBody source: string, _?: number): Observable<any> {
        return ['source', '_'] as any;
    }

}
