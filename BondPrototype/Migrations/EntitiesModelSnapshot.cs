// <auto-generated />
using System;
using BondPrototype.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BondPrototype.Migrations
{
    [DbContext(typeof(Entities))]
    partial class EntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BondPrototype.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DirectedById")
                        .HasColumnType("int");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DirectedById");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DirectedById = 1,
                            Rating = (byte)8,
                            ReleaseDate = new DateTime(2021, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Dune"
                        },
                        new
                        {
                            Id = 2,
                            DirectedById = 2,
                            Rating = (byte)8,
                            ReleaseDate = new DateTime(2007, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "No Country for Old Men"
                        },
                        new
                        {
                            Id = 3,
                            DirectedById = 1,
                            Rating = (byte)7,
                            ReleaseDate = new DateTime(2015, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sicario"
                        });
                });

            modelBuilder.Entity("BondPrototype.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Denis Villeneuve"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ethan Coen"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Josh Brolin"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Javier Bardem"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Timothée Chalamet"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Woody Harrelson"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Benicio Del Toro"
                        });
                });

            modelBuilder.Entity("MoviePerson", b =>
                {
                    b.Property<int>("ActedInId")
                        .HasColumnType("int");

                    b.Property<int>("ActorsId")
                        .HasColumnType("int");

                    b.HasKey("ActedInId", "ActorsId");

                    b.HasIndex("ActorsId");

                    b.ToTable("MovieCast", (string)null);

                    b.HasData(
                        new
                        {
                            ActedInId = 1,
                            ActorsId = 3
                        },
                        new
                        {
                            ActedInId = 1,
                            ActorsId = 4
                        },
                        new
                        {
                            ActedInId = 1,
                            ActorsId = 5
                        },
                        new
                        {
                            ActedInId = 2,
                            ActorsId = 3
                        },
                        new
                        {
                            ActedInId = 2,
                            ActorsId = 4
                        },
                        new
                        {
                            ActedInId = 2,
                            ActorsId = 6
                        },
                        new
                        {
                            ActedInId = 3,
                            ActorsId = 3
                        },
                        new
                        {
                            ActedInId = 3,
                            ActorsId = 7
                        });
                });

            modelBuilder.Entity("BondPrototype.Models.Movie", b =>
                {
                    b.HasOne("BondPrototype.Models.Person", "DirectedBy")
                        .WithMany("Directed")
                        .HasForeignKey("DirectedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DirectedBy");
                });

            modelBuilder.Entity("MoviePerson", b =>
                {
                    b.HasOne("BondPrototype.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("ActedInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BondPrototype.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BondPrototype.Models.Person", b =>
                {
                    b.Navigation("Directed");
                });
#pragma warning restore 612, 618
        }
    }
}
